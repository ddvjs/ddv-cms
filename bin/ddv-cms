#!/usr/bin/env node
'use strict'
// 标题
process.title = 'ddvCmsBin'
const argv = require('../lib/argv')
const logger = require('../lib/logger')
const config = require('../lib/config')
const { Nuxt, Builder, Generator } = require('../')

config(argv.configFile, argv)
  .then(options => {
    logger.log(`cmd ${argv.cmd}`)
    logger.log(`port ${argv.port}`)
    logger.log(`analyze ${argv.analyze}`)
    logger.log(`rootDir ${argv.rootDir}`)
    logger.log(`configFile ${argv.configFile}`)
    logger.log(argv)
    // 编译模式
    if (argv.cmd === 'build') {
      logger.log('[nuxt] Building...') // eslint-disable-line no-console
      const nuxt = new Nuxt(options)
      const builder = new Builder(nuxt)
      builder.build()
        .then(() => {
          logger.log('[nuxt] Building done') // eslint-disable-line no-console
        })
        .catch((err) => {
          logger.error(err) // eslint-disable-line no-console
          process.exit(1)
        })
      // 生成模式
    } else if (argv.cmd === 'generate') {
      logger.log('[nuxt] Generating...') // eslint-disable-line no-console
      const nuxt = new Nuxt(options)
      const builder = new Builder(nuxt)
      const generator = new Generator(nuxt, builder)
      generator.generate()
      nuxt.generate()
        .then(() => {
          logger.log('[nuxt] Generate done') // eslint-disable-line no-console
        })
        .catch((err) => {
          logger.error(err) // eslint-disable-line no-console
          process.exit(1)
        })
    } else if (argv.cmd === 'start' || argv.cmd === 'ddvstart' || argv.cmd === 'dev' || argv.cmd === 'ddvdev') {
      let server = require('../server')
      server.serverStart(config)
    } else {
      logger.error('This parameter is not supported')
      process.exit(1)
    }
  })
